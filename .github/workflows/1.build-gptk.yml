# Task to automatically build `apple/apple/game-porting-toolkit` 
# and put the resulting Cellar into a tarball

name: Build GPTK

on:
  push:
    branches: [ senpai ]
  schedule:
    - cron: "0 0 * * 0,4"
  workflow_dispatch:

jobs:
  build_gptk:
    name: Build GPTK
    strategy:
        matrix:
          flavour: [Vanilla, Vulkan]
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup x86_64 brew
        run: |
          arch -x86_64 /bin/bash -c "NONINTERACTIVE=1 $(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      
      - name: Load GPTK from cache if it exists
        id: gptk-cache
        uses: actions/cache@v4
        with:
          path: Game_Porting_Toolkit_1.1.dmg
          key: gptk-1.1

      - name: Download Apple's GPTK
        if: steps.gptk-cache.outputs.cache-hit != 'true'
        env: 
          USE_YOUR_TOKEN_LMAO: ${{ secrets.USE_YOUR_TOKEN_LMAO }}
        run: |
          curl -O 'https://download.developer.apple.com/Developer_Tools/Game_Porting_Toolkit_1.1/Game_Porting_Toolkit_1.1.dmg' -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/117.0' -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8' -H 'Accept-Language: en-US,en;q=0.5' -H 'Accept-Encoding: gzip, deflate, br' -H 'DNT: 1' -H 'Connection: keep-alive' -H 'Referer: https://developer.apple.com/' -H "Cookie: $USE_YOUR_TOKEN_LMAO" -H 'Upgrade-Insecure-Requests: 1' -H 'Sec-Fetch-Dest: document' -H 'Sec-Fetch-Mode: navigate' -H 'Sec-Fetch-Site: same-site' -H 'Sec-Fetch-User: ?1' -H 'Pragma: no-cache' -H 'Cache-Control: no-cache'
  
      - name: Save GPTK to cache
        if: steps.gptk-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          key: gptk-1.1
          path: Game_Porting_Toolkit_1.1.dmg

      - name: Mounts GPTK disk image
        run: |
          hdiutil attach Game_Porting_Toolkit_1.1.dmg

      - name: Prepare base GPTK patches
        run: |
          arch -x86_64 /usr/local/bin/brew tap apple/apple
          # Chop off the head of the formula (keep only the patch section after __END__)
          sed -n '/__END__/,$p' `arch -x86_64 /usr/local/bin/brew --repo apple/apple`/Formula/game-porting-toolkit.rb | sed '1d' > gptk_basepatch.patch

      - name: Load CXWine Sources from cache
        id: cxwine-cache
        uses: actions/cache@v4
        with:
          path: /tmp/cxsrc
          key: cxwine-22.1.1

      - name: Download CXWine Sources
        if: steps.cxwine-cache.outputs.cache-hit != 'true'
        run: |
          wget https://media.codeweavers.com/pub/crossover/source/crossover-sources-22.1.1.tar.gz -O crossover-sources.tar.gz
          mkdir /tmp/cxsrc
          tar -xf crossover-sources.tar.gz -C /tmp/cxsrc

      - name: Save CXWine Sources to cache
        if: steps.cxwine-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          key: cxwine-22.1.1
          path: /tmp/cxsrc

      - name: Apply patches to cxwine
        run: |
          WORKSPACE=$(pwd)
          cd /tmp/cxsrc/sources
          git init . 2>&1 >/dev/null && git config --local gc.auto 0
          git add . && git commit -m "Initial commit" 2>&1 >/dev/null
          patch -g0 -f -p0 < $WORKSPACE/gptk_basepatch.patch
          git add . && git commit -m "Apply base patch" 2>&1 >/dev/null
          cd wine
          patch -g0 -f < $WORKSPACE/patches/wine-msync/msync-cx22.patch
          cd ..
          git add . && git commit -m "Apply msync patch" 2>&1 >/dev/null
          # Now we have a patched cxwine in /tmp/cxsrc, diff it against the original and put it into the formula template we produced earlier
          git format-patch -2 --stdout >> $WORKSPACE/game-porting-toolkit.rb
          # Go back to the original directory
          cd $WORKSPACE

      - name: Check cache for compiler
        id: compiler-cache
        uses: actions/cache@v4
        with:
          path: /usr/local/Cellar/game-porting-toolkit-compiler
          key: game-porting-toolkit-compiler-0.1

      - name: Install compiler
        if: steps.compiler-cache.outputs.cache-hit != 'true'
        run: |
          arch -x86_64 /usr/local/bin/brew install apple/apple/game-porting-toolkit-compiler

      - name: Save compiler to cache
        if: steps.compiler-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          key: game-porting-toolkit-compiler-0.1
          path: /usr/local/Cellar/game-porting-toolkit-compiler
        
      - name: Relink compiler
        if: steps.compiler-cache.outputs.cache-hit == 'true'
        run: |
          arch -x86_64 /usr/local/bin/brew install apple/apple/game-porting-toolkit-compiler
          ln -s /usr/local/Cellar/game-porting-toolkit-compiler/0.1/ /usr/local/opt/game-porting-toolkit-compiler

      - name: Install pkg-config from source
        run: |
          arch -x86_64 /usr/local/bin/brew install --build-from-source pkg-config

      - if: matrix.flavour == 'Vulkan'
        name: Patch the formula
        run: |
          patch game-porting-toolkit.rb < patches/enable-vulkan-sdl.patch
      - name: Install GPTK
        run: |
          /usr/local/bin/brew install --build-bottle ./game-porting-toolkit.rb || true 
      - name: Package GPTK (Harbor)
        run: |
          /usr/local/bin/brew bottle apple/apple/game-porting-toolkit
          mkdir gptk_bottle
          mv *.tar.gz gptk_bottle
          touch gptk_bottle/.keep
          ditto /Volumes/Game\ Porting\ Toolkit-1.1/redist/lib/ gptk_bottle/gptk_libs
          tar -zcvf gptk_bottle.tar.gz gptk_bottle          
      - name: Upload GPTK bottle (Harbor)
        uses: actions/upload-artifact@v4
        with:
          name: GPTK ${{matrix.flavour}} (Harbor)
          path: gptk_bottle.tar.gz
      - name: Package GPTK (Whisky)
        run: |
          ditto `/usr/local/bin/brew --prefix game-porting-toolkit` Libraries/Wine
          touch Libraries/.keep
          rm -rvf Libraries/Wine/include
          rm -rvf Libraries/Wine/INSTALL_RECEIPT.json
          rm -rvf Libraries/Wine/share/man
          find Libraries/Wine/bin -type f -type l -not -name "wine64" -not -name "wine64-preloader" -not -name "wineserver" -delete
          ditto /Volumes/Game\ Porting\ Toolkit-1.1/redist/lib/ Libraries/Wine/lib
          mkdir gptk
          touch gptk/.keep
          tar -zcvf gptk/gptk.tar.gz Libraries
      - name: Upload GPTK (Whisky)
        uses: actions/upload-artifact@v4
        with:
          name: GPTK ${{matrix.flavour}} (Whisky)
          path: gptk

      - name: Upload the formula used to build GPTK
        uses: actions/upload-artifact@v4
        with:
          name: GPTK ${{matrix.flavour}} formula
          path: game-porting-toolkit.rb
      
      - name: Eject GPTK disk img
        run: |
          hdiutil detach /Volumes/Game\ Porting\ Toolkit-1.1
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ failure() }}
        timeout-minutes: 15
